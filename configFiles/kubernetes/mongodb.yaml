apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
  labels:
    app: auction
    tier: data
    type: nosqlServer
    impl: mongodb
data: 
  CLEARBEFORESTART: "0"
  MONGODPORT: "27017"
  MONGOCPORT: "27019"
  NUMSHARDS: "1"
  NUMREPLICAS: "0"
  ISCFGSVR: "0"
  ISMONGOS: "0"
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: mongodb
  replicas: 1
  template:
    metadata:
      name: mongodb
      labels:
        app: auction
        tier: data
        type: nosqlServer
        impl: mongodb
    spec:
      containers:
      - image: hrosenbe/weathervane-mongodb:1.2.0
        name: mongodb
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: mongodb-config
        volumeMounts:
        - name: mongodb-data
          mountPath: /mnt/mongoData
        ports: 
        - containerPort: 27017 
          name: mongodport
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - 'ps x | grep -v grep | grep -q mongod'
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - mongo bid --eval 'printjson(db.getCollectionNames())'
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      resources: 
        requests:
          storage: 200Gi
      accessModes:
      - ReadWriteOnce
      storageClassName: fast
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  clusterIP: None
  ports:
  - port: 27017
    targetPort: mongodport
  selector:
    app: auction
    tier: data
    type: nosqlServer
    impl: mongodb